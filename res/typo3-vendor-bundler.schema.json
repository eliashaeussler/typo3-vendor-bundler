{
	"$schema": "http://json-schema.org/draft-06/schema#",
	"type": "object",
	"title": "TYPO3 Vendor Bundler config file schema",
	"properties": {
		"autoload": {
			"$ref": "#/definitions/autoload"
		},
		"pathToVendorLibraries": {
			"type": "string",
			"title": "Absolute or relative path to composer.json where vendor libraries are managed",
			"default": "Resources/Private/Libs"
		},
		"rootPath": {
			"type": "string",
			"title": "Relative or absolute path to project root",
			"description": "This path will be used to calculate paths to configured files if they are configured as relative paths. If the root path is configured as relative path, it is calculated based on the config file path."
		}
	},
	"additionalProperties": false,
	"definitions": {
		"autoload": {
			"type": "object",
			"title": "Set of options used to bundle autoload configuration",
			"properties": {
				"dropComposerAutoload": {
					"type": "boolean",
					"title": "Define whether to drop \"autoload\" section in composer.json",
					"description": "When enabled, the configured \"autoload\" section in composer.json will be removed in order to let ext_emconf.php manage all autoload parameters",
					"default": true
				},
				"targetFile": {
					"type": "string",
					"title": "File where to bundle autoload configuration",
					"description": "This is usually the `composer.json` or `ext_emconf.php` file",
					"default": "composer.json"
				},
				"targetManifest": {
					"type": "string",
					"enum": [
						"composer",
						"extEmConf"
					],
					"title": "Target manifest where to bundle autoload configuration",
					"description": "Can be either \"composer\" (targeting `composer.json` file, default) or \"extEmConf\" (targeting `ext_emconf.php` file)",
					"default": "composer"
				},
				"backupSources": {
					"type": "boolean",
					"title": "Define whether to backup source files",
					"description": "When enabled, original contents of source files, which are to be modified, will be backed up in a separate file",
					"default": false
				},
				"overwriteExistingTargetFile": {
					"type": "boolean",
					"title": "Define whether to overwrite the target file, if it already exists",
					"description": "When enabled, the configured target file will be overwritten with the bundled autoload information, if the file already exists",
					"default": false
				},
				"excludeFromClassMap": {
					"type": "array",
					"title": "List of files to exclude from vendor libraries class map",
					"description": "Absolute or relative paths to files to remove from parsed vendor libraries class map",
					"items": {
						"type": "string",
						"minLength": 1
					}
				}
			},
			"additionalProperties": false
		}
	}
}
